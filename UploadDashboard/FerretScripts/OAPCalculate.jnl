! OAPCalculate.jnl

! We recompute some of the incoming variables and append them to the file,
! the values in the file are replaced. 
!
!  Argument is a file name; the single-cruise dsg file from the data entry
!  

define symbol cruise_filename "($1)"

set mem/siz=300 ! for sampling from etopo2

use "($cruise_filename)"
define symbol keep_history = `..History`
define symbol keep_conventions = `..conventions`

! If seconds field is missing, set it to zero.

set var/name=sec_in second
let second = missing(sec_in, 0)

! Get output type for variables in the incoming dataset. Except 
! for a couple that are INT, or CHAR, they should all be the same 
! numeric type; variables we write here will match that type.

define symbol outtype=`longitude,return=dtype`

!ship speed	-speed to next observation
! sw_dist script from matlab_sw_dist.m 
! given lat, lon, and units (km or nm), computes dist and phaseangle
GO sw_dist longitude latitude 'nm'
LET npts = `year[i=@ngd]`
let dist_filled = if i[gx=year] LT npts THEN dist ELSE dist[i=@fnr]

LET datenum = days1900(year, month, day) + hour/24 + minute/(24*60)
LET deltatt =24*datenum[i=@ddf]
LET deltaTime = IF i[gx=deltatt] LT npts THEN deltatt ELSE deltatt[i=@fnr]
LET speed = dist_filled/deltaTime !knots

! More variables to add: etopoDepth, d2l, region_id, gvCO2

GO SOCAT3_ETOPO2_depth

GO SOCAT3_dist2land

!!!!!!!Save output
cancel mode upcase

! Add the variables nobs_full and nobs_deci.  For full- resolution original data 
! these the same value as each other and as num_obs. Both are needed so set of 
! variables is identical to what is in the decimated versions.
! Note that num_obs is the "count variable" with the sample_dimension attribute
! making it an essential part of the DSG file

GO nobs_deci_full

! Lon in 0-360
let/title="longitude"/units="degrees_east" lon360 = IF longitude LT 0 THEN longitude+360 else longitude
set var/outtype=($outtype) lon360
define attribute/output lon360.ioos_category = "Location"
define attribute/output lon360.standard_name = "Longitude"
define attribute/output lon360.history = "added to ($cruise_filename)"

! Ship speed
let/title="calculated ship speed"/units="knots" calc_speed = speed
set var/outtype=($outtype) calc_speed

! ETOPO2 Depth
let/title="ETOPO2 depth"/units="meters" etopo2 = -1.0 * etopoDepth
set var/outtype=($outtype) etopo2
define attribute/output etopo2.positive = "down"
define attribute/output etopo2.ioos_category = "Bathymetry"
define attribute/output etopo2.standard_name = "sea_floor_depth"

! Distance to Land
let/title="Distance to Land"/unit="km" dist_to_land = d2l
set var/outtype=($outtype) dist_to_land

! Time (as seconds since 1970)
! days-since will be in the input datset

! Get seconds from 1900 to 1970
define axis/t="1-jan-1970:00:00:00":"1-jan-1970:00:00:01":1/units=seconds/t0="1-jan-1900:00:00:00" sec_1970
let tsec1 = `t[gt=sec_1970,L=1]`

let/units="seconds since 1970-01-01T00:00:00Z"/title="Datetime" time = \
 24*60*60* DAYS1900(year, month, day) + hour * 60*60 + minute *60 + second - tsec1
set var/outtype=($outtype) time
define attribute/output time.ioos_category = "Time"
define attribute/output time.standard_name = "time"
define attribute/output time.time_origin = "01-JAN-1970 00:00:00"

! Day of Year
LET day_and_year = days1900(year, month, day)
LET day1 = INT(`datenum[i=@min],prec=12` - 2)
LET dayn = INT(`datenum[i=@min],prec=12` + 2)
define axis/t=`day1,prec=12`:`dayn,prec=12`:1/units=days/t0=1-jan-1900 dayaxis
LET ttday = t[gt=dayaxis]

let/title="Day of Year"/units=days day_of_year = tax_jday(day_and_year, ttday) + \
 (hour * 60 * 60 + minute * 60 + second) / (24.0 * 60.0 * 60.0)
set var/outtype=($outtype) day_of_year
define attribute/output day_of_year.ioos_category = "Time"

! month of year
LET charmonths = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
let datamonths = samplei(charmonths, month)
let/title="month of year" tmonth = datamonths[gx=latitude@asn]
define attribute/output tmonth.history = "added to ($cruise_filename)"

! Save to the input files; variables will overwrite the nominal values already there

save/keep/quiet/append/file="($cruise_filename)" lon360 
save/keep/quiet/append/file="($cruise_filename)" etopo2
save/keep/quiet/append/file="($cruise_filename)" dist_to_land
save/keep/quiet/append/file="($cruise_filename)" time
save/keep/quiet/append/file="($cruise_filename)" day_of_year
save/keep/quiet/append/file="($cruise_filename)" tmonth

save/keep/quiet/append/file="($cruise_filename)" calc_speed

let edit_global = NCO_ATTR("($cruise_filename)","global","History","c","o","($keep_history)")
load edit_global
let edit_global = NCO_ATTR("($cruise_filename)","global","Conventions","c","o","($keep_conventions)")
load edit_global
